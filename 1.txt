git init 用于在当前目录下初始化一个新的Git代码仓库。这会在当前目录创建一个隐藏的 `.git` 文件夹，以跟踪版本控制信息。
git status 用于查看当前仓库的状态，显示哪些文件被修改、哪些文件已经暂存、哪些文件未被跟踪等信息。
git add 1.txt 将指定文件 (`1.txt`) 或目录添加到暂存区（staging area），准备提交到版本库。
git commit -m 'add 1.txt' 将暂存区中的文件提交到版本库并附上相应的提交信息 (`'add 1.txt'`)。这样就创建了一个新的提交记录。
git log 看显示当前分支的提交历史记录，以展示从最新到最旧的提交记录列表。
git add .  将工作区中的所有未暂存的修改添加到暂存区，包括新添加的文件和已修改的文件。
git diff 用于比较工作区和暂存区之间或提交的最新版本之间的差异，显示出未暂存的改动。
git reset HEAD <file> 用于将暂存区的修改撤销，将指定文件 (`<file>`) 从暂存区退回到工作区，不影响工作区的文件内容。
git checkout --file 丢弃工作区对指定文件 (`file`) 的修改，并将其恢复为最后一次提交的状态。相当于撤销工作区的修改并还原到最近提交状态。
git log --oneline  是Git命令的一个选项，用于查看提交历史的简洁信息,Git会以一行的简洁方式显示提交历史，每个提交记录只显示一个简短的哈希值和提交信息。
git checkout -b feature_a
git branch
git checkout master